<#@ template language="c#" hostspecific="true" #>
<#@ output extension=".nuspec" #>
<#@ parameter type="System.String" name="Library_D_Version" #>
<#@ parameter type="System.String" name="Library_E_Version" #><?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata minClientVersion="2.5">
    <id>$id$</id>
    <version>$version$</version>
    <authors>Chris Martinez</authors>
    <owners>Commonsense Software</owners>
    <title>Complex NuGet Build Example</title>
    <description>$description$</description>
    <summary>Demonstrates a complex example for supporting NuGet package creation.</summary>
    <releaseNotes></releaseNotes>
    <language>en-US</language>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectUrl>https://github.com/commonsensesoftware/more.build/examples/complex</projectUrl>
    <copyright>Commonsense Software</copyright>
    <dependencies>
      <!-- NOTE: although we could allow nuget to build the references directly from the project references, 'Library C'
                 would be added as a direct dependency when it is actually a transitive dependency of 'Library D' -->
      <dependency id="LibraryD" version="<#= Library_D_Version #>" />
      <dependency id="LibraryE" version="<#= Library_E_Version #>" />
    </dependencies>
  </metadata>
</package>
